---
- name: 'Check mandatory variables are defined'
  assert:
    that:
      - application_name is defined
      - docker_network_name is defined
      - host_port is defined
      - loki_url is defined
      - database_container_name is defined
      - database_user is defined
      - database_password is defined
      - database_name is defined
      - redis_hostname is defined

- name: Create the dockernetwork
  docker_network:
    name: "{{ docker_network_name }}"

- name: Create the config directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/upload"
    state: directory
    mode: "0700"

# Redis container missing
- name: Create database
  include_role:
    name: ansible-postgres
    tasks_from: create-postgres-database-if-not-exists


- name: Create server container
  docker_container:
    name: "{{ application_name }}-server"
    image: "ghcr.io/immich-app/immich-server:v1.91.4"
    pull: true
    command: ["start.sh", "immich"]
    cleanup: true
    log_driver: "loki"
    log_options:
      loki-url: "{{ loki_url }}"
      loki-batch-size: "400"
    restart_policy: "always"
    exposed_ports:
      - 2283
    published_ports:
      - "0.0.0.0:{{ host_port }}:2283"
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/upload:/usr/src/app/upload"
      - /etc/localtime:/etc/localtime:ro
    env:
      NODE_ENV: "production"
      DB_HOSTNAME: "{{ database_container_name }}"
      DB_USERNAME: "{{ database_user }}"
      DB_PASSWORD: "{{ database_password }}"
      DB_DATABASE_NAME: "{{ database_name }}"
      REDIS_HOSTNAME: "{{ redis_hostname }}"

- name: Create microservices container
  docker_container:
    name: "{{ application_name }}-microservices"
    image: "ghcr.io/immich-app/immich-server:v1.91.4"
    pull: true
    command: ["start.sh", "microservices"]
    cleanup: true
    log_driver: "loki"
    log_options:
      loki-url: "{{ loki_url }}"
      loki-batch-size: "400"
    restart_policy: "always"
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/upload:/usr/src/app/upload"
      - /etc/localtime:/etc/localtime:ro
    env:
      NODE_ENV: "production"
      DB_HOSTNAME: "{{ database_container_name }}"
      DB_USERNAME: "{{ database_user }}"
      DB_PASSWORD: "{{ database_password }}"
      DB_DATABASE_NAME: "{{ database_name }}"
      REDIS_HOSTNAME: "{{ redis_hostname }}"

- name: Create machine learning container
  docker_container:
    name: "{{ application_name }}-machine-learning"
    image: "ghcr.io/immich-app/immich-machine-learning:v1.91.4"
    pull: true
    cleanup: true
    log_driver: "loki"
    log_options:
      loki-url: "{{ loki_url }}"
      loki-batch-size: "400"
    restart_policy: "always"
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - model-cache:/cache
    env:
      NODE_ENV: "production"
