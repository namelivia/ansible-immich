---
- name: 'Check mandatory variables are defined'
  assert:
    that:
      - application_name is defined
      - docker_network_name is defined
      - domain_name is defined
      - cloudwatch_region is defined
      - cloudwatch_log_group is defined

- name: Create the dockernetwork
  docker_network:
    name: "{{ docker_network_name }}"

- name: Create the config directory
  file:
    path: "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/upload"
    state: directory
    mode: 0700

# Redis container missing
# Database container missing

- name: Create server container
  docker_container:
    name: "{{ application_name }}-server"
    image: "altran1502/immich-server:release"
    cleanup: true
    log_driver: "awslogs"
    log_options:
      awslogs-region: "{{ cloudwatch_region }}"
      awslogs-group: "{{ cloudwatch_log_group }}"
      awslogs-stream: "{{ application_name }}-server"
    restart_policy: "always"
    exposed_ports:
      - "80"
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/upload:/usr/src/app/upload"
    env:
      NODE_ENV: "production"

- name: Create microservices container
  docker_container:
    name: "{{ application_name }}-microservices"
    image: "altran1502/immich-server:release"
    cleanup: true
    log_driver: "awslogs"
    log_options:
      awslogs-region: "{{ cloudwatch_region }}"
      awslogs-group: "{{ cloudwatch_log_group }}"
      awslogs-stream: "{{ application_name }}-microservices"
    restart_policy: "always"
    exposed_ports:
      - "80"
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/upload:/usr/src/app/upload"
    env:
      NODE_ENV: "production"
      #TODO: Missing env values here

- name: Create machine learning container
  docker_container:
    name: "{{ application_name }}-machine-learning"
    image: "altran1502/immich-machine-learning:release"
    cleanup: true
    log_driver: "awslogs"
    log_options:
      awslogs-region: "{{ cloudwatch_region }}"
      awslogs-group: "{{ cloudwatch_log_group }}"
      awslogs-stream: "{{ application_name }}-marchine-learning"
    restart_policy: "always"
    exposed_ports:
      - "80"
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - "{{ hostvars[inventory_hostname].working_directory }}{{ application_name }}/upload:/usr/src/app/upload"
    env:
      NODE_ENV: "production"
      #TODO: Missing env values here

- name: Create web container
  docker_container:
    name: "{{ application_name }}-web"
    image: "altran1502/immich-web:release"
    cleanup: true
    log_driver: "awslogs"
    log_options:
      awslogs-region: "{{ cloudwatch_region }}"
      awslogs-group: "{{ cloudwatch_log_group }}"
      awslogs-stream: "{{ application_name }}-marchine-learning"
    restart_policy: "always"
    exposed_ports:
      - "80"
    networks:
      - name: "{{ docker_network_name }}"
    env:
      #TODO: Missing env values here
- name: Create proxy container
  docker_container:
    name: "{{ application_name }}-proxy"
    image: "altran1502/immich-proxy:release"
    cleanup: true
    log_driver: "awslogs"
    log_options:
      awslogs-region: "{{ cloudwatch_region }}"
      awslogs-group: "{{ cloudwatch_log_group }}"
      awslogs-stream: "{{ application_name }}-marchine-learning"
    restart_policy: "always"
    exposed_ports:
      - "2283"
    networks:
      - name: "{{ docker_network_name }}"
    env:
      IMMICH_SERVER_URL: "server_url"
      IMMICH_WEB_URL: "server_url"
